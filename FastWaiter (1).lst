;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26/07/2022 21:24:19
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EFE1  	GOTO        1474
_interrupt:
;FastWaiter.c,208 :: 		void interrupt()
0x0008	0xF015C000  	MOVFF       R0, 21
;FastWaiter.c,210 :: 		GIE_bit = 0;
0x000C	0x9EF2      	BCF         GIE_bit, BitPos(GIE_bit+0) 
;FastWaiter.c,212 :: 		if (RCIF_bit == 1)
0x000E	0xAA9E      	BTFSS       RCIF_bit, BitPos(RCIF_bit+0) 
0x0010	0xD01A      	BRA         L_interrupt42
;FastWaiter.c,214 :: 		if(FERR_bit == 1)
0x0012	0xA4AB      	BTFSS       FERR_bit, BitPos(FERR_bit+0) 
0x0014	0xD007      	BRA         L_interrupt43
;FastWaiter.c,216 :: 		rxRead = RCREG;
0x0016	0xF0C7CFAE  	MOVFF       RCREG, _rxRead
0x001A	0x0E00      	MOVLW       0
0x001C	0x0100      	MOVLB       0
0x001E	0x6FC8      	MOVWF       _rxRead+1, 1
;FastWaiter.c,217 :: 		GIE_bit = 1;
0x0020	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;FastWaiter.c,218 :: 		return;
0x0022	0xD026      	BRA         L__interrupt88
;FastWaiter.c,219 :: 		}
L_interrupt43:
;FastWaiter.c,221 :: 		if(OERR_bit == 1)
0x0024	0xA2AB      	BTFSS       OERR_bit, BitPos(OERR_bit+0) 
0x0026	0xD004      	BRA         L_interrupt44
;FastWaiter.c,223 :: 		CREN_bit = 0;
0x0028	0x98AB      	BCF         CREN_bit, BitPos(CREN_bit+0) 
;FastWaiter.c,224 :: 		CREN_bit = 1;
0x002A	0x88AB      	BSF         CREN_bit, BitPos(CREN_bit+0) 
;FastWaiter.c,225 :: 		GIE_bit  = 1;
0x002C	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;FastWaiter.c,226 :: 		return;
0x002E	0xD020      	BRA         L__interrupt88
;FastWaiter.c,227 :: 		}
L_interrupt44:
0x0030	0x0100      	MOVLB       0
;FastWaiter.c,229 :: 		count = RCREG;
0x0032	0xF0C9CFAE  	MOVFF       RCREG, _count
0x0036	0x0E00      	MOVLW       0
0x0038	0x6FCA      	MOVWF       _count+1, 1
;FastWaiter.c,230 :: 		count = 0;
0x003A	0x6BC9      	CLRF        _count, 1
0x003C	0x6BCA      	CLRF        _count+1, 1
;FastWaiter.c,232 :: 		TMR0L = oneSecond = secs = 0;
0x003E	0x6BC4      	CLRF        _secs, 1
0x0040	0x6BC5      	CLRF        _oneSecond, 1
0x0042	0x6BC6      	CLRF        _oneSecond+1, 1
0x0044	0x6AD6      	CLRF        TMR0L 
;FastWaiter.c,233 :: 		}
L_interrupt42:
;FastWaiter.c,235 :: 		if (TMR0IF_bit)
0x0046	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x0048	0xD012      	BRA         L_interrupt45
;FastWaiter.c,237 :: 		TMR0L = 0;
0x004A	0x0100      	MOVLB       0
0x004C	0x6AD6      	CLRF        TMR0L 
;FastWaiter.c,238 :: 		TMR0IF_bit = 0;
0x004E	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;FastWaiter.c,239 :: 		oneSecond++;
0x0050	0x4BC5      	INFSNZ      _oneSecond, 1, 1
0x0052	0x2BC6      	INCF        _oneSecond+1, 1, 1
;FastWaiter.c,241 :: 		if(oneSecond > 999)
0x0054	0x0E80      	MOVLW       128
0x0056	0x0A03      	XORLW       3
0x0058	0x6E00      	MOVWF       R0 
0x005A	0x0E80      	MOVLW       128
0x005C	0x19C6      	XORWF       _oneSecond+1, 0, 1
0x005E	0x5C00      	SUBWF       R0, 0 
0x0060	0xE102      	BNZ         L__interrupt89
0x0062	0x51C5      	MOVF        _oneSecond, 0, 1
0x0064	0x08E7      	SUBLW       231
L__interrupt89:
0x0066	0xE203      	BC          L_interrupt46
;FastWaiter.c,243 :: 		secs++;
0x0068	0x2BC4      	INCF        _secs, 1, 1
;FastWaiter.c,244 :: 		oneSecond=0;
0x006A	0x6BC5      	CLRF        _oneSecond, 1
0x006C	0x6BC6      	CLRF        _oneSecond+1, 1
;FastWaiter.c,245 :: 		}
L_interrupt46:
;FastWaiter.c,246 :: 		}
L_interrupt45:
;FastWaiter.c,248 :: 		GIE_bit = 1;
0x006E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;FastWaiter.c,249 :: 		}
L_end_interrupt:
L__interrupt88:
0x0070	0xF000C015  	MOVFF       21, R0
0x0074	0x0011      	RETFIE      1
; end of _interrupt
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0076	0x0EC7      	MOVLW       199
0x0078	0x6E0D      	MOVWF       R13, 0
L_Delay_50us3:
0x007A	0x2E0D      	DECFSZ      R13, 1, 0
0x007C	0xD7FE      	BRA         L_Delay_50us3
0x007E	0x0000      	NOP
0x0080	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0082	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0084	0x0E56      	MOVLW       86
0x0086	0x6E0C      	MOVWF       R12, 0
0x0088	0x0EB5      	MOVLW       181
0x008A	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us6:
0x008C	0x2E0D      	DECFSZ      R13, 1, 0
0x008E	0xD7FE      	BRA         L_Delay_5500us6
0x0090	0x2E0C      	DECFSZ      R12, 1, 0
0x0092	0xD7FC      	BRA         L_Delay_5500us6
0x0094	0x0000      	NOP
0x0096	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0098	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x009A	0x0E03      	MOVLW       3
0x009C	0x6E0D      	MOVWF       R13, 0
L_Delay_1us0:
0x009E	0x2E0D      	DECFSZ      R13, 1, 0
0x00A0	0xD7FE      	BRA         L_Delay_1us0
0x00A2	0x0000      	NOP
0x00A4	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x00A6	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x00A8	0x0100      	MOVLB       0
0x00AA	0xBFEF      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x00AC	0xD002      	BRA         L__Lcd_Cmd21
0x00AE	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00B0	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x00B2	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x00B4	0xBDEF      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x00B6	0xD002      	BRA         L__Lcd_Cmd23
0x00B8	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00BA	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x00BC	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x00BE	0xBBEF      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x00C0	0xD002      	BRA         L__Lcd_Cmd25
0x00C2	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00C4	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00C6	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00C8	0xB9EF      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x00CA	0xD002      	BRA         L__Lcd_Cmd27
0x00CC	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00CE	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00D0	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00D2	0xB1D8      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00D4	0xD002      	BRA         L__Lcd_Cmd29
0x00D6	0x8481      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00D8	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00DA	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00DC	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x00DE	0xDFDD      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00E0	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x00E2	0xB7EF      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x00E4	0xD002      	BRA         L__Lcd_Cmd31
0x00E6	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00E8	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00EA	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00EC	0xB5EF      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x00EE	0xD002      	BRA         L__Lcd_Cmd33
0x00F0	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00F2	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00F4	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00F6	0xB3EF      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x00F8	0xD002      	BRA         L__Lcd_Cmd35
0x00FA	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00FC	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00FE	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0100	0xB1EF      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x0102	0xD002      	BRA         L__Lcd_Cmd37
0x0104	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0106	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x0108	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x010A	0xB1D8      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x010C	0xD002      	BRA         L__Lcd_Cmd39
0x010E	0x8481      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0110	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0112	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0114	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x0116	0xDFC1      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0118	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x011A	0xA1D8      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x011C	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x011E	0xDFB2      	RCALL       _Delay_5500us
0x0120	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0122	0xDFA9      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0124	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0126	0x0100      	MOVLB       0
0x0128	0x91D8      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x012A	0xF0EFC0EE  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x012E	0xDFBC      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0130	0x81D8      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0132	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0134	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0136	0x0E80      	MOVLW       128
0x0138	0x0100      	MOVLB       0
0x013A	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x013C	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x013E	0x0EC0      	MOVLW       192
0x0140	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x0142	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0144	0x0E94      	MOVLW       148
0x0146	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x0148	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x014A	0x0ED4      	MOVLW       212
0x014C	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x014E	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0150	0x0E80      	MOVLW       128
0x0152	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x0154	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0156	0x0100      	MOVLB       0
0x0158	0x51E9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x015A	0x0A01      	XORLW       1
0x015C	0xE0EC      	BZ          L_Lcd_Out13
0x015E	0x51E9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0160	0x0A02      	XORLW       2
0x0162	0xE0ED      	BZ          L_Lcd_Out14
0x0164	0x51E9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0166	0x0A03      	XORLW       3
0x0168	0xE0ED      	BZ          L_Lcd_Out15
0x016A	0x51E9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x016C	0x0A04      	XORLW       4
0x016E	0xE0ED      	BZ          L_Lcd_Out16
0x0170	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0172	0x05EA      	DECF        FARG_Lcd_Out_column, 0, 1
0x0174	0x6E00      	MOVWF       R0 
0x0176	0x51E9      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0178	0x2600      	ADDWF       R0, 1 
0x017A	0xF0E9C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x017E	0xF0EFC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0182	0xDF92      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0184	0x91D8      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x0186	0x6BED      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0188	0x51ED      	MOVF        Lcd_Out_i_L0, 0, 1
0x018A	0x25EB      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x018C	0x6EE9      	MOVWF       FSR0L 
0x018E	0x0E00      	MOVLW       0
0x0190	0x21EC      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0192	0x6EEA      	MOVWF       FSR0L+1 
0x0194	0x52EE      	MOVF        POSTINC0, 1 
0x0196	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0198	0x51ED      	MOVF        Lcd_Out_i_L0, 0, 1
0x019A	0x25EB      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x019C	0x6EE9      	MOVWF       FSR0L 
0x019E	0x0E00      	MOVLW       0
0x01A0	0x21EC      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x01A2	0x6EEA      	MOVWF       FSR0L+1 
0x01A4	0xF0EECFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x01A8	0xDFBE      	RCALL       _Lcd_Chr_CP
0x01AA	0x2BED      	INCF        Lcd_Out_i_L0, 1, 1
0x01AC	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x01AE	0x81D8      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x01B0	0x0012      	RETURN      0
; end of _Lcd_Out
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x01B2	0xB2AC      	BTFSC       TXSTA, 1 
0x01B4	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x01B6	0x0000      	NOP
0x01B8	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x01BA	0xFFADC0E4  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x01BE	0x0012      	RETURN      0
; end of _UART1_Write
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x01C0	0x0E27      	MOVLW       39
0x01C2	0x6E0D      	MOVWF       R13, 0
L_Delay_10us1:
0x01C4	0x2E0D      	DECFSZ      R13, 1, 0
0x01C6	0xD7FE      	BRA         L_Delay_10us1
0x01C8	0x0000      	NOP
0x01CA	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x01CC	0x0012      	RETURN      0
; end of _Delay_10us
_Keypad_Key_Press:
;__Lib_Keypad4x4.c,39 :: 		
;__Lib_Keypad4x4.c,43 :: 		
0x01CE	0x0100      	MOVLB       0
0x01D0	0x6BE4      	CLRF        Keypad_Key_Press_rslt_L0, 1
;__Lib_Keypad4x4.c,44 :: 		
0x01D2	0x6BE6      	CLRF        Keypad_Key_Press_loc_L0, 1
;__Lib_Keypad4x4.c,45 :: 		
0x01D4	0x6BE7      	CLRF        Keypad_Key_Press_rowcnt_L0, 1
;__Lib_Keypad4x4.c,46 :: 		
0x01D6	0x0E10      	MOVLW       16
0x01D8	0x6FE8      	MOVWF       Keypad_Key_Press_shifter_L0, 1
;__Lib_Keypad4x4.c,48 :: 		
L_Keypad_Key_Press0:
0x01DA	0x0E04      	MOVLW       4
0x01DC	0x5DE7      	SUBWF       Keypad_Key_Press_rowcnt_L0, 0, 1
0x01DE	0xE229      	BC          L_Keypad_Key_Press1
;__Lib_Keypad4x4.c,50 :: 		
0x01E0	0x0EF0      	MOVLW       240
0x01E2	0x6E83      	MOVWF       keypadPort 
;__Lib_Keypad4x4.c,51 :: 		
0x01E4	0x0E12      	MOVLW       18
0x01E6	0x6E00      	MOVWF       R0 
0x01E8	0x0E00      	MOVLW       0
0x01EA	0x6E01      	MOVWF       R1 
0x01EC	0x0E83      	MOVLW       keypadPort
0x01EE	0x2400      	ADDWF       R0, 0 
0x01F0	0x6EE1      	MOVWF       FSR1L 
0x01F2	0x0E0F      	MOVLW       hi_addr(keypadPort)
0x01F4	0x2001      	ADDWFC      R1, 0 
0x01F6	0x6EE2      	MOVWF       FSR1L+1 
0x01F8	0x1DE8      	COMF        Keypad_Key_Press_shifter_L0, 0, 1
0x01FA	0x6E00      	MOVWF       R0 
0x01FC	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Keypad4x4.c,55 :: 		
0x0200	0xDF4C      	RCALL       _Delay_1us
;__Lib_Keypad4x4.c,56 :: 		
0x0202	0xDF4B      	RCALL       _Delay_1us
;__Lib_Keypad4x4.c,57 :: 		
0x0204	0x0E0F      	MOVLW       15
0x0206	0x1483      	ANDWF       keypadPort, 0 
0x0208	0x6E00      	MOVWF       R0 
0x020A	0xF0E5C000  	MOVFF       R0, Keypad_Key_Press_kdata_L0
;__Lib_Keypad4x4.c,58 :: 		
0x020E	0x5200      	MOVF        R0, 1 
0x0210	0xE00A      	BZ          L_Keypad_Key_Press2
;__Lib_Keypad4x4.c,60 :: 		
0x0212	0xF0E4C0E6  	MOVFF       Keypad_Key_Press_loc_L0, Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,61 :: 		
L_Keypad_Key_Press3:
0x0216	0x53E5      	MOVF        Keypad_Key_Press_kdata_L0, 1, 1
0x0218	0xE004      	BZ          L_Keypad_Key_Press4
;__Lib_Keypad4x4.c,62 :: 		
0x021A	0x33E5      	RRCF        Keypad_Key_Press_kdata_L0, 1, 1
0x021C	0x9FE5      	BCF         Keypad_Key_Press_kdata_L0, 7, 1
;__Lib_Keypad4x4.c,63 :: 		
0x021E	0x2BE4      	INCF        Keypad_Key_Press_rslt_L0, 1, 1
;__Lib_Keypad4x4.c,64 :: 		
0x0220	0xD7FA      	BRA         L_Keypad_Key_Press3
L_Keypad_Key_Press4:
;__Lib_Keypad4x4.c,66 :: 		
0x0222	0x0E04      	MOVLW       4
0x0224	0x6FE7      	MOVWF       Keypad_Key_Press_rowcnt_L0, 1
;__Lib_Keypad4x4.c,67 :: 		
L_Keypad_Key_Press2:
;__Lib_Keypad4x4.c,68 :: 		
0x0226	0x37E8      	RLCF        Keypad_Key_Press_shifter_L0, 1, 1
0x0228	0x91E8      	BCF         Keypad_Key_Press_shifter_L0, 0, 1
;__Lib_Keypad4x4.c,69 :: 		
0x022A	0x0E04      	MOVLW       4
0x022C	0x27E6      	ADDWF       Keypad_Key_Press_loc_L0, 1, 1
;__Lib_Keypad4x4.c,70 :: 		
0x022E	0x2BE7      	INCF        Keypad_Key_Press_rowcnt_L0, 1, 1
;__Lib_Keypad4x4.c,71 :: 		
0x0230	0xD7D4      	BRA         L_Keypad_Key_Press0
L_Keypad_Key_Press1:
;__Lib_Keypad4x4.c,73 :: 		
0x0232	0xF000C0E4  	MOVFF       Keypad_Key_Press_rslt_L0, R0
;__Lib_Keypad4x4.c,74 :: 		
L_end_Keypad_Key_Press:
0x0236	0x0012      	RETURN      0
; end of _Keypad_Key_Press
_pedido:
;FastWaiter.c,59 :: 		void pedido ()
;FastWaiter.c,61 :: 		lcd_out(1,1, "Digite o Numero");
0x0238	0x0E01      	MOVLW       1
0x023A	0x0100      	MOVLB       0
0x023C	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x023E	0x0E01      	MOVLW       1
0x0240	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x0242	0x0E21      	MOVLW       ?lstr1_FastWaiter
0x0244	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x0246	0x0E00      	MOVLW       hi_addr(?lstr1_FastWaiter)
0x0248	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x024A	0xDF74      	RCALL       _Lcd_Out
;FastWaiter.c,62 :: 		lcd_out(2,1, "Do Pedido:");
0x024C	0x0E02      	MOVLW       2
0x024E	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x0250	0x0E01      	MOVLW       1
0x0252	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x0254	0x0E16      	MOVLW       ?lstr2_FastWaiter
0x0256	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x0258	0x0E00      	MOVLW       hi_addr(?lstr2_FastWaiter)
0x025A	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x025C	0xDF6B      	RCALL       _Lcd_Out
;FastWaiter.c,63 :: 		}
L_end_pedido:
0x025E	0x0012      	RETURN      0
; end of _pedido
_teclaauxiliar:
;FastWaiter.c,78 :: 		void teclaauxiliar()
;FastWaiter.c,80 :: 		if(kp == 'B')
0x0260	0x0100      	MOVLB       0
0x0262	0x51CB      	MOVF        _kp, 0, 1
0x0264	0x0A42      	XORLW       66
0x0266	0xE12F      	BNZ         L_teclaauxiliar2
;FastWaiter.c,82 :: 		kp=0;
0x0268	0x6BCB      	CLRF        _kp, 1
;FastWaiter.c,83 :: 		pos=0;
0x026A	0x6BAB      	CLRF        _pos, 1
;FastWaiter.c,84 :: 		i=0;
0x026C	0x6BB4      	CLRF        _i, 1
;FastWaiter.c,85 :: 		UART1_Write(kp);
0x026E	0x6BE4      	CLRF        FARG_UART1_Write_data_, 1
0x0270	0xDFA0      	RCALL       _UART1_Write
;FastWaiter.c,86 :: 		lcd_cmd(_lcd_clear);
0x0272	0x0E01      	MOVLW       1
0x0274	0x0100      	MOVLB       0
0x0276	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0278	0xDF17      	RCALL       _Lcd_Cmd
;FastWaiter.c,87 :: 		lcd_cmd (_LCD_RETURN_HOME);
0x027A	0x0E02      	MOVLW       2
0x027C	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x027E	0xDF14      	RCALL       _Lcd_Cmd
;FastWaiter.c,88 :: 		lcd_out(1,1, "    Chamando    ");
0x0280	0x0E01      	MOVLW       1
0x0282	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x0284	0x0E01      	MOVLW       1
0x0286	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x0288	0x0E9A      	MOVLW       ?lstr5_FastWaiter
0x028A	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x028C	0x0E00      	MOVLW       hi_addr(?lstr5_FastWaiter)
0x028E	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0290	0xDF51      	RCALL       _Lcd_Out
;FastWaiter.c,89 :: 		lcd_out(2,1, "     Gar?on     ");
0x0292	0x0E02      	MOVLW       2
0x0294	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x0296	0x0E01      	MOVLW       1
0x0298	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x029A	0x0E89      	MOVLW       ?lstr6_FastWaiter
0x029C	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x029E	0x0E00      	MOVLW       hi_addr(?lstr6_FastWaiter)
0x02A0	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x02A2	0xDF48      	RCALL       _Lcd_Out
;FastWaiter.c,90 :: 		delay_ms(1300);
0x02A4	0x0E50      	MOVLW       80
0x02A6	0x6E0B      	MOVWF       R11, 0
0x02A8	0x0E24      	MOVLW       36
0x02AA	0x6E0C      	MOVWF       R12, 0
0x02AC	0x0E86      	MOVLW       134
0x02AE	0x6E0D      	MOVWF       R13, 0
L_teclaauxiliar3:
0x02B0	0x2E0D      	DECFSZ      R13, 1, 0
0x02B2	0xD7FE      	BRA         L_teclaauxiliar3
0x02B4	0x2E0C      	DECFSZ      R12, 1, 0
0x02B6	0xD7FC      	BRA         L_teclaauxiliar3
0x02B8	0x2E0B      	DECFSZ      R11, 1, 0
0x02BA	0xD7FA      	BRA         L_teclaauxiliar3
0x02BC	0x0000      	NOP
;FastWaiter.c,91 :: 		lcd_cmd(_lcd_clear);
0x02BE	0x0E01      	MOVLW       1
0x02C0	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x02C2	0xDEF2      	RCALL       _Lcd_Cmd
;FastWaiter.c,92 :: 		pedido();
0x02C4	0xDFB9      	RCALL       _pedido
;FastWaiter.c,93 :: 		}
L_teclaauxiliar2:
;FastWaiter.c,94 :: 		if (kp == 'D')
0x02C6	0x51CB      	MOVF        _kp, 0, 1
0x02C8	0x0A44      	XORLW       68
0x02CA	0xE12F      	BNZ         L_teclaauxiliar4
;FastWaiter.c,96 :: 		kp=0;
0x02CC	0x6BCB      	CLRF        _kp, 1
;FastWaiter.c,97 :: 		pos=0;
0x02CE	0x6BAB      	CLRF        _pos, 1
;FastWaiter.c,98 :: 		i=0;
0x02D0	0x6BB4      	CLRF        _i, 1
;FastWaiter.c,99 :: 		UART1_Write(kp);
0x02D2	0x6BE4      	CLRF        FARG_UART1_Write_data_, 1
0x02D4	0xDF6E      	RCALL       _UART1_Write
;FastWaiter.c,100 :: 		lcd_cmd(_lcd_clear);
0x02D6	0x0E01      	MOVLW       1
0x02D8	0x0100      	MOVLB       0
0x02DA	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x02DC	0xDEE5      	RCALL       _Lcd_Cmd
;FastWaiter.c,101 :: 		lcd_out(1,1, "     Conta      ");
0x02DE	0x0E01      	MOVLW       1
0x02E0	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x02E2	0x0E01      	MOVLW       1
0x02E4	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x02E6	0x0E78      	MOVLW       ?lstr7_FastWaiter
0x02E8	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x02EA	0x0E00      	MOVLW       hi_addr(?lstr7_FastWaiter)
0x02EC	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x02EE	0xDF22      	RCALL       _Lcd_Out
;FastWaiter.c,102 :: 		lcd_out(2,1, "    Enviada     ");
0x02F0	0x0E02      	MOVLW       2
0x02F2	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x02F4	0x0E01      	MOVLW       1
0x02F6	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x02F8	0x0E3D      	MOVLW       ?lstr8_FastWaiter
0x02FA	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x02FC	0x0E00      	MOVLW       hi_addr(?lstr8_FastWaiter)
0x02FE	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0300	0xDF19      	RCALL       _Lcd_Out
;FastWaiter.c,103 :: 		delay_ms(1300);
0x0302	0x0E50      	MOVLW       80
0x0304	0x6E0B      	MOVWF       R11, 0
0x0306	0x0E24      	MOVLW       36
0x0308	0x6E0C      	MOVWF       R12, 0
0x030A	0x0E86      	MOVLW       134
0x030C	0x6E0D      	MOVWF       R13, 0
L_teclaauxiliar5:
0x030E	0x2E0D      	DECFSZ      R13, 1, 0
0x0310	0xD7FE      	BRA         L_teclaauxiliar5
0x0312	0x2E0C      	DECFSZ      R12, 1, 0
0x0314	0xD7FC      	BRA         L_teclaauxiliar5
0x0316	0x2E0B      	DECFSZ      R11, 1, 0
0x0318	0xD7FA      	BRA         L_teclaauxiliar5
0x031A	0x0000      	NOP
;FastWaiter.c,104 :: 		lcd_cmd(_lcd_clear);
0x031C	0x0E01      	MOVLW       1
0x031E	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0320	0xDEC3      	RCALL       _Lcd_Cmd
;FastWaiter.c,105 :: 		lcd_cmd (_LCD_RETURN_HOME);
0x0322	0x0E02      	MOVLW       2
0x0324	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0326	0xDEC0      	RCALL       _Lcd_Cmd
;FastWaiter.c,106 :: 		pedido();
0x0328	0xDF87      	RCALL       _pedido
;FastWaiter.c,107 :: 		}
L_teclaauxiliar4:
;FastWaiter.c,108 :: 		if(kp == 'C')              // Tecla limpar
0x032A	0x51CB      	MOVF        _kp, 0, 1
0x032C	0x0A43      	XORLW       67
0x032E	0xE109      	BNZ         L_teclaauxiliar6
;FastWaiter.c,110 :: 		lcd_cmd(_lcd_clear);
0x0330	0x0E01      	MOVLW       1
0x0332	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0334	0xDEB9      	RCALL       _Lcd_Cmd
;FastWaiter.c,111 :: 		lcd_cmd (_LCD_RETURN_HOME);
0x0336	0x0E02      	MOVLW       2
0x0338	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x033A	0xDEB6      	RCALL       _Lcd_Cmd
;FastWaiter.c,112 :: 		kp=0;
0x033C	0x6BCB      	CLRF        _kp, 1
;FastWaiter.c,113 :: 		pos=0;
0x033E	0x6BAB      	CLRF        _pos, 1
;FastWaiter.c,114 :: 		pedido();
0x0340	0xDF7B      	RCALL       _pedido
;FastWaiter.c,115 :: 		}
L_teclaauxiliar6:
;FastWaiter.c,116 :: 		}
L_end_teclaauxiliar:
0x0342	0x0012      	RETURN      0
; end of _teclaauxiliar
_Keypad_Key_Click:
;__Lib_Keypad4x4.c,77 :: 		
;__Lib_Keypad4x4.c,81 :: 		
0x0344	0xDF44      	RCALL       _Keypad_Key_Press
0x0346	0xF0E3C000  	MOVFF       R0, Keypad_Key_Click_rslt_L0
;__Lib_Keypad4x4.c,83 :: 		
L_Keypad_Key_Click5:
0x034A	0x0E0F      	MOVLW       15
0x034C	0x1483      	ANDWF       keypadPort, 0 
0x034E	0x6E00      	MOVWF       R0 
0x0350	0xE002      	BZ          L_Keypad_Key_Click6
;__Lib_Keypad4x4.c,84 :: 		
0x0352	0xDF36      	RCALL       _Delay_10us
0x0354	0xD7FA      	BRA         L_Keypad_Key_Click5
L_Keypad_Key_Click6:
;__Lib_Keypad4x4.c,86 :: 		
0x0356	0xF000C0E3  	MOVFF       Keypad_Key_Click_rslt_L0, R0
;__Lib_Keypad4x4.c,87 :: 		
L_end_Keypad_Key_Click:
0x035A	0x0012      	RETURN      0
; end of _Keypad_Key_Click
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x035C	0x9693      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x035E	0x9493      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0360	0x9893      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0362	0x9A93      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0364	0x9C93      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0366	0x9E93      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0368	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x036A	0x9481      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x036C	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x036E	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0370	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0372	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0374	0xDE87      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0376	0xDE86      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0378	0xDE85      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x037A	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x037C	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x037E	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0380	0xDE8C      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0382	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0384	0xDE7F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0386	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0388	0xDE88      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x038A	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x038C	0xDE7B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x038E	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0390	0xDE84      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0392	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0394	0xDE77      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0396	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0398	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x039A	0xDE7F      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x039C	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x039E	0xDE72      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x03A0	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x03A2	0xDE7B      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x03A4	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x03A6	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x03A8	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x03AA	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x03AC	0xDE76      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x03AE	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x03B0	0xDE69      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x03B2	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x03B4	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x03B6	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x03B8	0xDE70      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x03BA	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x03BC	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x03BE	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x03C0	0xDE6C      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x03C2	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x03C4	0xDE5F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x03C6	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x03C8	0xDE68      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x03CA	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x03CC	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x03CE	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x03D0	0xDE64      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x03D2	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x03D4	0xDE57      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x03D6	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x03D8	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x03DA	0xDE5F      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x03DC	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x03DE	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x03E0	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x03E2	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x03E4	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x03E6	0x8681      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x03E8	0xDE58      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x03EA	0x9681      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x03EC	0xDE4B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x03EE	0x0100      	MOVLB       0
0x03F0	0x81D8      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x03F2	0x0012      	RETURN      0
; end of _Lcd_Init
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x03F4	0x0EB2      	MOVLW       _UART1_Write
0x03F6	0x0100      	MOVLB       0
0x03F8	0x6FD9      	MOVWF       _UART_Wr_Ptr, 1
0x03FA	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x03FC	0x6FDA      	MOVWF       _UART_Wr_Ptr+1, 1
0x03FE	0x0EE4      	MOVLW       FARG_UART1_Write_data_
0x0400	0x6FDB      	MOVWF       _UART_Wr_Ptr+2, 1
0x0402	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0404	0x6FDC      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0406	0x0EFF      	MOVLW       _UART1_Read
0x0408	0x6FCC      	MOVWF       _UART_Rd_Ptr, 1
0x040A	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x040C	0x6FCD      	MOVWF       _UART_Rd_Ptr+1, 1
0x040E	0x0E00      	MOVLW       0
0x0410	0x6FCE      	MOVWF       _UART_Rd_Ptr+2, 1
0x0412	0x0E00      	MOVLW       0
0x0414	0x6FCF      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0416	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0418	0x6FD0      	MOVWF       _UART_Rdy_Ptr, 1
0x041A	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x041C	0x6FD1      	MOVWF       _UART_Rdy_Ptr+1, 1
0x041E	0x0E00      	MOVLW       0
0x0420	0x6FD2      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0422	0x0E00      	MOVLW       0
0x0424	0x6FD3      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0426	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0428	0x6FD4      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x042A	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x042C	0x6FD5      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x042E	0x0E00      	MOVLW       0
0x0430	0x6FD6      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0432	0x0E00      	MOVLW       0
0x0434	0x6FD7      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0436	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0438	0x0E90      	MOVLW       144
0x043A	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x043C	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x043E	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0440	0xAA9E      	BTFSS       PIR1, 5 
0x0442	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0444	0xF000CFAE  	MOVFF       RCREG, R0
0x0448	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x044A	0x0012      	RETURN      0
; end of _UART1_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x044C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x044E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0452	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0454	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0456	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0458	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x045A	0x0012      	RETURN      0
; end of ___CC2DW
_Keypad_Init:
;__Lib_Keypad4x4.c,34 :: 		
;__Lib_Keypad4x4.c,35 :: 		
0x045C	0x0E12      	MOVLW       18
0x045E	0x6E00      	MOVWF       R0 
0x0460	0x0E00      	MOVLW       0
0x0462	0x6E01      	MOVWF       R1 
0x0464	0x0E83      	MOVLW       keypadPort
0x0466	0x2400      	ADDWF       R0, 0 
0x0468	0x6EE1      	MOVWF       FSR1L 
0x046A	0x0E0F      	MOVLW       hi_addr(keypadPort)
0x046C	0x2001      	ADDWFC      R1, 0 
0x046E	0x6EE2      	MOVWF       FSR1L+1 
0x0470	0x0EFF      	MOVLW       255
0x0472	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Keypad4x4.c,36 :: 		
L_end_Keypad_Init:
0x0474	0x0012      	RETURN      0
; end of _Keypad_Init
_escrita:
;FastWaiter.c,71 :: 		void escrita ()
;FastWaiter.c,73 :: 		if (kp=='A')
0x0476	0x0100      	MOVLB       0
0x0478	0x51CB      	MOVF        _kp, 0, 1
0x047A	0x0A41      	XORLW       65
0x047C	0xE101      	BNZ         L_escrita0
;FastWaiter.c,74 :: 		{}
0x047E	0xD003      	BRA         L_escrita1
L_escrita0:
;FastWaiter.c,75 :: 		else {lcd_chr_cp(kp);}
0x0480	0xF0EEC0CB  	MOVFF       _kp, FARG_Lcd_Chr_CP_out_char
0x0484	0xDE50      	RCALL       _Lcd_Chr_CP
L_escrita1:
;FastWaiter.c,76 :: 		}
L_end_escrita:
0x0486	0x0012      	RETURN      0
; end of _escrita
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0488	0x0100      	MOVLB       0
0x048A	0x6BE2      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x048C	0xFFE9C0DF  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x0490	0xFFEAC0E0  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0494	0xF0E1CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0498	0x51E1      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x049A	0x0A00      	XORLW       0
0x049C	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x049E	0xF0E4C0E1  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x04A2	0xDE87      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x04A4	0x0100      	MOVLB       0
0x04A6	0x2BE2      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x04A8	0x51E2      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x04AA	0x25DF      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x04AC	0x6EE9      	MOVWF       FSR0L 
0x04AE	0x0E00      	MOVLW       0
0x04B0	0x21E0      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x04B2	0x6EEA      	MOVWF       FSR0L+1 
0x04B4	0xF0E1CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x04B8	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x04BA	0x0012      	RETURN      0
; end of _UART1_Write_Text
_leitura:
;FastWaiter.c,118 :: 		void leitura ()
;FastWaiter.c,120 :: 		kp = 0;                                // Reset key code variable
0x04BC	0x0100      	MOVLB       0
0x04BE	0x6BCB      	CLRF        _kp, 1
;FastWaiter.c,122 :: 		do
L_leitura7:
;FastWaiter.c,124 :: 		kp = Keypad_Key_Click();             // Store key code in kp variable
0x04C0	0xDF41      	RCALL       _Keypad_Key_Click
0x04C2	0xF0CBC000  	MOVFF       R0, _kp
;FastWaiter.c,125 :: 		while (!kp);
0x04C6	0x5200      	MOVF        R0, 1 
0x04C8	0xE0FB      	BZ          L_leitura7
;FastWaiter.c,127 :: 		switch (kp) {
0x04CA	0xD030      	BRA         L_leitura10
;FastWaiter.c,128 :: 		case  1: kp = 49; break; // 1        // Uncomment this block for keypad4x4
L_leitura12:
0x04CC	0x0E31      	MOVLW       49
0x04CE	0x6FCB      	MOVWF       _kp, 1
0x04D0	0xD05D      	BRA         L_leitura11
;FastWaiter.c,129 :: 		case  2: kp = 50; break; // 2
L_leitura13:
0x04D2	0x0E32      	MOVLW       50
0x04D4	0x6FCB      	MOVWF       _kp, 1
0x04D6	0xD05A      	BRA         L_leitura11
;FastWaiter.c,130 :: 		case  3: kp = 51; break; // 3
L_leitura14:
0x04D8	0x0E33      	MOVLW       51
0x04DA	0x6FCB      	MOVWF       _kp, 1
0x04DC	0xD057      	BRA         L_leitura11
;FastWaiter.c,131 :: 		case  4: kp = 65; break; // A
L_leitura15:
0x04DE	0x0E41      	MOVLW       65
0x04E0	0x6FCB      	MOVWF       _kp, 1
0x04E2	0xD054      	BRA         L_leitura11
;FastWaiter.c,132 :: 		case  5: kp = 52; break; // 4
L_leitura16:
0x04E4	0x0E34      	MOVLW       52
0x04E6	0x6FCB      	MOVWF       _kp, 1
0x04E8	0xD051      	BRA         L_leitura11
;FastWaiter.c,133 :: 		case  6: kp = 53; break; // 5
L_leitura17:
0x04EA	0x0E35      	MOVLW       53
0x04EC	0x6FCB      	MOVWF       _kp, 1
0x04EE	0xD04E      	BRA         L_leitura11
;FastWaiter.c,134 :: 		case  7: kp = 54; break; // 6
L_leitura18:
0x04F0	0x0E36      	MOVLW       54
0x04F2	0x6FCB      	MOVWF       _kp, 1
0x04F4	0xD04B      	BRA         L_leitura11
;FastWaiter.c,135 :: 		case  8: kp = 66; break; // B
L_leitura19:
0x04F6	0x0E42      	MOVLW       66
0x04F8	0x6FCB      	MOVWF       _kp, 1
0x04FA	0xD048      	BRA         L_leitura11
;FastWaiter.c,136 :: 		case  9: kp = 55; break; // 7
L_leitura20:
0x04FC	0x0E37      	MOVLW       55
0x04FE	0x6FCB      	MOVWF       _kp, 1
0x0500	0xD045      	BRA         L_leitura11
;FastWaiter.c,137 :: 		case 10: kp = 56; break; // 8
L_leitura21:
0x0502	0x0E38      	MOVLW       56
0x0504	0x6FCB      	MOVWF       _kp, 1
0x0506	0xD042      	BRA         L_leitura11
;FastWaiter.c,138 :: 		case 11: kp = 57; break; // 9
L_leitura22:
0x0508	0x0E39      	MOVLW       57
0x050A	0x6FCB      	MOVWF       _kp, 1
0x050C	0xD03F      	BRA         L_leitura11
;FastWaiter.c,139 :: 		case 12: kp = 67; break; // C
L_leitura23:
0x050E	0x0E43      	MOVLW       67
0x0510	0x6FCB      	MOVWF       _kp, 1
0x0512	0xD03C      	BRA         L_leitura11
;FastWaiter.c,140 :: 		case 13: kp = 42; break; // *
L_leitura24:
0x0514	0x0E2A      	MOVLW       42
0x0516	0x6FCB      	MOVWF       _kp, 1
0x0518	0xD039      	BRA         L_leitura11
;FastWaiter.c,141 :: 		case 14: kp = 48; break; // 0
L_leitura25:
0x051A	0x0E30      	MOVLW       48
0x051C	0x6FCB      	MOVWF       _kp, 1
0x051E	0xD036      	BRA         L_leitura11
;FastWaiter.c,142 :: 		case 15: kp = 35; break; // #
L_leitura26:
0x0520	0x0E23      	MOVLW       35
0x0522	0x6FCB      	MOVWF       _kp, 1
0x0524	0xD033      	BRA         L_leitura11
;FastWaiter.c,143 :: 		case 16: kp = 68; break; // D
L_leitura27:
0x0526	0x0E44      	MOVLW       68
0x0528	0x6FCB      	MOVWF       _kp, 1
0x052A	0xD030      	BRA         L_leitura11
;FastWaiter.c,144 :: 		}
L_leitura10:
0x052C	0x51CB      	MOVF        _kp, 0, 1
0x052E	0x0A01      	XORLW       1
0x0530	0xE0CD      	BZ          L_leitura12
0x0532	0x51CB      	MOVF        _kp, 0, 1
0x0534	0x0A02      	XORLW       2
0x0536	0xE0CD      	BZ          L_leitura13
0x0538	0x51CB      	MOVF        _kp, 0, 1
0x053A	0x0A03      	XORLW       3
0x053C	0xE0CD      	BZ          L_leitura14
0x053E	0x51CB      	MOVF        _kp, 0, 1
0x0540	0x0A04      	XORLW       4
0x0542	0xE0CD      	BZ          L_leitura15
0x0544	0x51CB      	MOVF        _kp, 0, 1
0x0546	0x0A05      	XORLW       5
0x0548	0xE0CD      	BZ          L_leitura16
0x054A	0x51CB      	MOVF        _kp, 0, 1
0x054C	0x0A06      	XORLW       6
0x054E	0xE0CD      	BZ          L_leitura17
0x0550	0x51CB      	MOVF        _kp, 0, 1
0x0552	0x0A07      	XORLW       7
0x0554	0xE0CD      	BZ          L_leitura18
0x0556	0x51CB      	MOVF        _kp, 0, 1
0x0558	0x0A08      	XORLW       8
0x055A	0xE0CD      	BZ          L_leitura19
0x055C	0x51CB      	MOVF        _kp, 0, 1
0x055E	0x0A09      	XORLW       9
0x0560	0xE0CD      	BZ          L_leitura20
0x0562	0x51CB      	MOVF        _kp, 0, 1
0x0564	0x0A0A      	XORLW       10
0x0566	0xE0CD      	BZ          L_leitura21
0x0568	0x51CB      	MOVF        _kp, 0, 1
0x056A	0x0A0B      	XORLW       11
0x056C	0xE0CD      	BZ          L_leitura22
0x056E	0x51CB      	MOVF        _kp, 0, 1
0x0570	0x0A0C      	XORLW       12
0x0572	0xE0CD      	BZ          L_leitura23
0x0574	0x51CB      	MOVF        _kp, 0, 1
0x0576	0x0A0D      	XORLW       13
0x0578	0xE0CD      	BZ          L_leitura24
0x057A	0x51CB      	MOVF        _kp, 0, 1
0x057C	0x0A0E      	XORLW       14
0x057E	0xE0CD      	BZ          L_leitura25
0x0580	0x51CB      	MOVF        _kp, 0, 1
0x0582	0x0A0F      	XORLW       15
0x0584	0xE0CD      	BZ          L_leitura26
0x0586	0x51CB      	MOVF        _kp, 0, 1
0x0588	0x0A10      	XORLW       16
0x058A	0xE0CD      	BZ          L_leitura27
L_leitura11:
;FastWaiter.c,145 :: 		if (kp != oldstate) {                  // Pressed key differs from previous
0x058C	0x51CB      	MOVF        _kp, 0, 1
0x058E	0x184E      	XORWF       _oldstate, 0 
0x0590	0xE002      	BZ          L_leitura28
;FastWaiter.c,146 :: 		oldstate = kp;
0x0592	0xF04EC0CB  	MOVFF       _kp, _oldstate
;FastWaiter.c,147 :: 		}
L_leitura28:
;FastWaiter.c,148 :: 		teclaauxiliar();
0x0596	0xDE64      	RCALL       _teclaauxiliar
;FastWaiter.c,149 :: 		}
L_end_leitura:
0x0598	0x0012      	RETURN      0
; end of _leitura
_quantidade:
;FastWaiter.c,65 :: 		void quantidade ()
;FastWaiter.c,67 :: 		lcd_out(1,1, "Digite a");
0x059A	0x0E01      	MOVLW       1
0x059C	0x0100      	MOVLB       0
0x059E	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x05A0	0x0E01      	MOVLW       1
0x05A2	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x05A4	0x0E4F      	MOVLW       ?lstr3_FastWaiter
0x05A6	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x05A8	0x0E00      	MOVLW       hi_addr(?lstr3_FastWaiter)
0x05AA	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x05AC	0xDDC3      	RCALL       _Lcd_Out
;FastWaiter.c,68 :: 		lcd_out(2,1, "quantidade:");
0x05AE	0x0E02      	MOVLW       2
0x05B0	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x05B2	0x0E01      	MOVLW       1
0x05B4	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x05B6	0x0E31      	MOVLW       ?lstr4_FastWaiter
0x05B8	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x05BA	0x0E00      	MOVLW       hi_addr(?lstr4_FastWaiter)
0x05BC	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x05BE	0xDDBA      	RCALL       _Lcd_Out
;FastWaiter.c,69 :: 		}
L_end_quantidade:
0x05C0	0x0012      	RETURN      0
; end of _quantidade
_main:
0x05C2	0xF004EC0A  	CALL        2068, 0
;FastWaiter.c,270 :: 		void main()
;FastWaiter.c,272 :: 		rcon=0x80;
0x05C6	0x0E80      	MOVLW       128
0x05C8	0x6ED0      	MOVWF       RCON 
;FastWaiter.c,273 :: 		cmcon=0x0F;
0x05CA	0x0E0F      	MOVLW       15
0x05CC	0x6EB4      	MOVWF       CMCON 
;FastWaiter.c,274 :: 		intcon2=0;
0x05CE	0x6AF1      	CLRF        INTCON2 
;FastWaiter.c,275 :: 		ADCON1 |= 0x0F;   //Define todos pi0s AN como digital I/O
0x05D0	0x0E0F      	MOVLW       15
0x05D2	0x12C1      	IORWF       ADCON1, 1 
;FastWaiter.c,276 :: 		PORTD  = 0;
0x05D4	0x6A83      	CLRF        PORTD 
;FastWaiter.c,277 :: 		TRISE  = 0;
0x05D6	0x6A96      	CLRF        TRISE 
;FastWaiter.c,278 :: 		PORTE  = 0;
0x05D8	0x6A84      	CLRF        PORTE 
;FastWaiter.c,279 :: 		Keypad_Init();          // Inicializa o Teclado Matricial
0x05DA	0xDF40      	RCALL       _Keypad_Init
;FastWaiter.c,281 :: 		RCIE_bit   = 0;         // (DES)habilitar interrupcao  em RX
0x05DC	0x9A9D      	BCF         RCIE_bit, BitPos(RCIE_bit+0) 
;FastWaiter.c,282 :: 		TXIE_bit   = 0;         // desabilita interrupcao em TX (default)
0x05DE	0x989D      	BCF         TXIE_bit, BitPos(TXIE_bit+0) 
;FastWaiter.c,283 :: 		PEIE_bit   = 1;         // habilitar/desabilitar interrupcoes perifericas (INTCON)
0x05E0	0x8CF2      	BSF         PEIE_bit, BitPos(PEIE_bit+0) 
;FastWaiter.c,284 :: 		GIE_bit    = 1;         // liga chave geral das interrupcoes
0x05E2	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;FastWaiter.c,285 :: 		TMR0IE_bit = 1;         //interrupcao do timer0
0x05E4	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;FastWaiter.c,288 :: 		UART1_Init(38400);
0x05E6	0x86B8      	BSF         BAUDCON, 3, 0
0x05E8	0x0E01      	MOVLW       1
0x05EA	0x6EB0      	MOVWF       SPBRGH 
0x05EC	0x0E37      	MOVLW       55
0x05EE	0x6EAF      	MOVWF       SPBRG 
0x05F0	0x84AC      	BSF         TXSTA, 2, 0
0x05F2	0xDF00      	RCALL       _UART1_Init
;FastWaiter.c,289 :: 		Delay_ms(500);
0x05F4	0x0E1F      	MOVLW       31
0x05F6	0x6E0B      	MOVWF       R11, 0
0x05F8	0x0E71      	MOVLW       113
0x05FA	0x6E0C      	MOVWF       R12, 0
0x05FC	0x0E1E      	MOVLW       30
0x05FE	0x6E0D      	MOVWF       R13, 0
L_main49:
0x0600	0x2E0D      	DECFSZ      R13, 1, 0
0x0602	0xD7FE      	BRA         L_main49
0x0604	0x2E0C      	DECFSZ      R12, 1, 0
0x0606	0xD7FC      	BRA         L_main49
0x0608	0x2E0B      	DECFSZ      R11, 1, 0
0x060A	0xD7FA      	BRA         L_main49
0x060C	0x0000      	NOP
;FastWaiter.c,291 :: 		T0CON = 0xC4;
0x060E	0x0EC4      	MOVLW       196
0x0610	0x6ED5      	MOVWF       T0CON 
;FastWaiter.c,292 :: 		INTCON = 0xA0;
0x0612	0x0EA0      	MOVLW       160
0x0614	0x6EF2      	MOVWF       INTCON 
;FastWaiter.c,293 :: 		RCIE_bit = 0;
0x0616	0x9A9D      	BCF         RCIE_bit, BitPos(RCIE_bit+0) 
;FastWaiter.c,294 :: 		TXIE_bit = 0;
0x0618	0x989D      	BCF         TXIE_bit, BitPos(TXIE_bit+0) 
;FastWaiter.c,295 :: 		PEIE_bit = 1;
0x061A	0x8CF2      	BSF         PEIE_bit, BitPos(PEIE_bit+0) 
;FastWaiter.c,296 :: 		GIE_bit = 1;
0x061C	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;FastWaiter.c,297 :: 		TMR0IE_bit = 1;
0x061E	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;FastWaiter.c,298 :: 		OSCCON = 0x75;
0x0620	0x0E75      	MOVLW       117
0x0622	0x6ED3      	MOVWF       OSCCON 
;FastWaiter.c,301 :: 		trisb=0;
0x0624	0x6A93      	CLRF        TRISB 
;FastWaiter.c,302 :: 		portb=0;
0x0626	0x6A81      	CLRF        PORTB 
;FastWaiter.c,303 :: 		Lcd_Init();
0x0628	0xDE99      	RCALL       _Lcd_Init
;FastWaiter.c,304 :: 		Lcd_Cmd(_Lcd_Cursor_Off);
0x062A	0x0E0C      	MOVLW       12
0x062C	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x062E	0xDD3C      	RCALL       _Lcd_Cmd
;FastWaiter.c,305 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0630	0x0E01      	MOVLW       1
0x0632	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0634	0xDD39      	RCALL       _Lcd_Cmd
;FastWaiter.c,306 :: 		Delay_ms(10);
0x0636	0x0E9C      	MOVLW       156
0x0638	0x6E0C      	MOVWF       R12, 0
0x063A	0x0ED7      	MOVLW       215
0x063C	0x6E0D      	MOVWF       R13, 0
L_main50:
0x063E	0x2E0D      	DECFSZ      R13, 1, 0
0x0640	0xD7FE      	BRA         L_main50
0x0642	0x2E0C      	DECFSZ      R12, 1, 0
0x0644	0xD7FC      	BRA         L_main50
;FastWaiter.c,307 :: 		pedido();
0x0646	0xDDF8      	RCALL       _pedido
;FastWaiter.c,309 :: 		TMR0L = 0;
0x0648	0x6AD6      	CLRF        TMR0L 
;FastWaiter.c,311 :: 		while (1)
L_main51:
;FastWaiter.c,313 :: 		if (i==0)
0x064A	0x51B4      	MOVF        _i, 0, 1
0x064C	0x0A00      	XORLW       0
0x064E	0xE102      	BNZ         L_main53
;FastWaiter.c,315 :: 		pedido();
0x0650	0xDDF3      	RCALL       _pedido
;FastWaiter.c,316 :: 		leitura();
0x0652	0xDF34      	RCALL       _leitura
;FastWaiter.c,317 :: 		}
L_main53:
;FastWaiter.c,318 :: 		if (kp != 0)
0x0654	0x51CB      	MOVF        _kp, 0, 1
0x0656	0x0A00      	XORLW       0
0x0658	0xB4D8      	BTFSC       STATUS, 2 
0x065A	0xD07F      	BRA         L_main54
;FastWaiter.c,320 :: 		UART1_Write_Text("Pedido:");
0x065C	0x0EAC      	MOVLW       ?lstr13_FastWaiter
0x065E	0x6FDF      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x0660	0x0E00      	MOVLW       hi_addr(?lstr13_FastWaiter)
0x0662	0x6FE0      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x0664	0xDF11      	RCALL       _UART1_Write_Text
;FastWaiter.c,321 :: 		i=1;
0x0666	0x0E01      	MOVLW       1
0x0668	0x6FB4      	MOVWF       _i, 1
;FastWaiter.c,322 :: 		do {                         // leitura do pedido
L_main55:
;FastWaiter.c,323 :: 		escrita();
0x066A	0xDF05      	RCALL       _escrita
;FastWaiter.c,324 :: 		UART1_Write(kp);
0x066C	0xF0E4C0CB  	MOVFF       _kp, FARG_UART1_Write_data_
0x0670	0xDDA0      	RCALL       _UART1_Write
;FastWaiter.c,325 :: 		pos++;
0x0672	0x0100      	MOVLB       0
0x0674	0x2BAB      	INCF        _pos, 1, 1
;FastWaiter.c,326 :: 		leitura();
0x0676	0xDF22      	RCALL       _leitura
;FastWaiter.c,327 :: 		if (pos == 3)               //
0x0678	0x51AB      	MOVF        _pos, 0, 1
0x067A	0x0A03      	XORLW       3
0x067C	0xE104      	BNZ         L_main58
;FastWaiter.c,329 :: 		do {                       // Maximo 3 digitos
L_main59:
;FastWaiter.c,330 :: 		leitura();                //
0x067E	0xDF1E      	RCALL       _leitura
;FastWaiter.c,331 :: 		} while (kp != 'A');       //
0x0680	0x51CB      	MOVF        _kp, 0, 1
0x0682	0x0A41      	XORLW       65
0x0684	0xE1FC      	BNZ         L_main59
;FastWaiter.c,332 :: 		}                           //
L_main58:
;FastWaiter.c,333 :: 		} while( kp != 'A');
0x0686	0x51CB      	MOVF        _kp, 0, 1
0x0688	0x0A41      	XORLW       65
0x068A	0xE1EF      	BNZ         L_main55
;FastWaiter.c,335 :: 		num = kp;
0x068C	0xF0DEC0CB  	MOVFF       _kp, _num
;FastWaiter.c,337 :: 		lcd_cmd(_lcd_clear);
0x0690	0x0E01      	MOVLW       1
0x0692	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0694	0xDD09      	RCALL       _Lcd_Cmd
;FastWaiter.c,338 :: 		quantidade();
0x0696	0xDF81      	RCALL       _quantidade
;FastWaiter.c,339 :: 		kp=0;
0x0698	0x6BCB      	CLRF        _kp, 1
;FastWaiter.c,340 :: 		pos=0;
0x069A	0x6BAB      	CLRF        _pos, 1
;FastWaiter.c,341 :: 		UART1_Write_Text("  ");
0x069C	0x0EC1      	MOVLW       ?lstr14_FastWaiter
0x069E	0x6FDF      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x06A0	0x0E00      	MOVLW       hi_addr(?lstr14_FastWaiter)
0x06A2	0x6FE0      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x06A4	0xDEF1      	RCALL       _UART1_Write_Text
;FastWaiter.c,342 :: 		UART1_Write_Text("Quantidade:");
0x06A6	0x0EB5      	MOVLW       ?lstr15_FastWaiter
0x06A8	0x6FDF      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x06AA	0x0E00      	MOVLW       hi_addr(?lstr15_FastWaiter)
0x06AC	0x6FE0      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x06AE	0xDEEC      	RCALL       _UART1_Write_Text
;FastWaiter.c,343 :: 		delay_ms(10);
0x06B0	0x0E9C      	MOVLW       156
0x06B2	0x6E0C      	MOVWF       R12, 0
0x06B4	0x0ED7      	MOVLW       215
0x06B6	0x6E0D      	MOVWF       R13, 0
L_main62:
0x06B8	0x2E0D      	DECFSZ      R13, 1, 0
0x06BA	0xD7FE      	BRA         L_main62
0x06BC	0x2E0C      	DECFSZ      R12, 1, 0
0x06BE	0xD7FC      	BRA         L_main62
;FastWaiter.c,345 :: 		do {
L_main63:
;FastWaiter.c,346 :: 		if (kp==0)
0x06C0	0x51CB      	MOVF        _kp, 0, 1
0x06C2	0x0A00      	XORLW       0
0x06C4	0xE104      	BNZ         L_main66
;FastWaiter.c,348 :: 		do {
L_main67:
;FastWaiter.c,349 :: 		leitura();
0x06C6	0xDEFA      	RCALL       _leitura
;FastWaiter.c,350 :: 		} while (kp == 0);
0x06C8	0x51CB      	MOVF        _kp, 0, 1
0x06CA	0x0A00      	XORLW       0
0x06CC	0xE0FC      	BZ          L_main67
;FastWaiter.c,351 :: 		}
L_main66:
;FastWaiter.c,352 :: 		escrita();                   // leitura da quantidade
0x06CE	0xDED3      	RCALL       _escrita
;FastWaiter.c,353 :: 		UART1_Write(kp);
0x06D0	0xF0E4C0CB  	MOVFF       _kp, FARG_UART1_Write_data_
0x06D4	0xDD6E      	RCALL       _UART1_Write
;FastWaiter.c,354 :: 		pos++;
0x06D6	0x0100      	MOVLB       0
0x06D8	0x2BAB      	INCF        _pos, 1, 1
;FastWaiter.c,355 :: 		leitura();
0x06DA	0xDEF0      	RCALL       _leitura
;FastWaiter.c,357 :: 		if (pos == 3)                //
0x06DC	0x51AB      	MOVF        _pos, 0, 1
0x06DE	0x0A03      	XORLW       3
0x06E0	0xE104      	BNZ         L_main70
;FastWaiter.c,359 :: 		do {                        // Maximo 3 digitos
L_main71:
;FastWaiter.c,360 :: 		leitura();                 //
0x06E2	0xDEEC      	RCALL       _leitura
;FastWaiter.c,361 :: 		} while (kp != 'A');        //
0x06E4	0x51CB      	MOVF        _kp, 0, 1
0x06E6	0x0A41      	XORLW       65
0x06E8	0xE1FC      	BNZ         L_main71
;FastWaiter.c,362 :: 		}                            //
L_main70:
;FastWaiter.c,363 :: 		} while( kp != 'A');
0x06EA	0x51CB      	MOVF        _kp, 0, 1
0x06EC	0x0A41      	XORLW       65
0x06EE	0xE1E8      	BNZ         L_main63
;FastWaiter.c,365 :: 		qtd = kp;
0x06F0	0xF0DDC0CB  	MOVFF       _kp, _qtd
;FastWaiter.c,367 :: 		lcd_cmd(_lcd_clear);
0x06F4	0x0E01      	MOVLW       1
0x06F6	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x06F8	0xDCD7      	RCALL       _Lcd_Cmd
;FastWaiter.c,368 :: 		pos=0;
0x06FA	0x6BAB      	CLRF        _pos, 1
;FastWaiter.c,369 :: 		i=0;
0x06FC	0x6BB4      	CLRF        _i, 1
;FastWaiter.c,370 :: 		kp=0;
0x06FE	0x6BCB      	CLRF        _kp, 1
;FastWaiter.c,372 :: 		num = 0;
0x0700	0x6BDE      	CLRF        _num, 1
;FastWaiter.c,373 :: 		qtd = 0;
0x0702	0x6BDD      	CLRF        _qtd, 1
;FastWaiter.c,375 :: 		lcd_out(1,1, "     Pedido     ");
0x0704	0x0E01      	MOVLW       1
0x0706	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x0708	0x0E01      	MOVLW       1
0x070A	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x070C	0x0E67      	MOVLW       ?lstr16_FastWaiter
0x070E	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x0710	0x0E00      	MOVLW       hi_addr(?lstr16_FastWaiter)
0x0712	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0714	0xDD0F      	RCALL       _Lcd_Out
;FastWaiter.c,376 :: 		lcd_out(2,1, "    enviado   ");
0x0716	0x0E02      	MOVLW       2
0x0718	0x6FE9      	MOVWF       FARG_Lcd_Out_row, 1
0x071A	0x0E01      	MOVLW       1
0x071C	0x6FEA      	MOVWF       FARG_Lcd_Out_column, 1
0x071E	0x0E58      	MOVLW       ?lstr17_FastWaiter
0x0720	0x6FEB      	MOVWF       FARG_Lcd_Out_text, 1
0x0722	0x0E00      	MOVLW       hi_addr(?lstr17_FastWaiter)
0x0724	0x6FEC      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0726	0xDD06      	RCALL       _Lcd_Out
;FastWaiter.c,377 :: 		delay_ms(2000);
0x0728	0x0E7A      	MOVLW       122
0x072A	0x6E0B      	MOVWF       R11, 0
0x072C	0x0EC1      	MOVLW       193
0x072E	0x6E0C      	MOVWF       R12, 0
0x0730	0x0E81      	MOVLW       129
0x0732	0x6E0D      	MOVWF       R13, 0
L_main74:
0x0734	0x2E0D      	DECFSZ      R13, 1, 0
0x0736	0xD7FE      	BRA         L_main74
0x0738	0x2E0C      	DECFSZ      R12, 1, 0
0x073A	0xD7FC      	BRA         L_main74
0x073C	0x2E0B      	DECFSZ      R11, 1, 0
0x073E	0xD7FA      	BRA         L_main74
0x0740	0x0000      	NOP
0x0742	0x0000      	NOP
;FastWaiter.c,378 :: 		lcd_cmd(_lcd_clear);
0x0744	0x0E01      	MOVLW       1
0x0746	0x6FEF      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0748	0xDCAF      	RCALL       _Lcd_Cmd
;FastWaiter.c,379 :: 		delay_ms(10);
0x074A	0x0E9C      	MOVLW       156
0x074C	0x6E0C      	MOVWF       R12, 0
0x074E	0x0ED7      	MOVLW       215
0x0750	0x6E0D      	MOVWF       R13, 0
L_main75:
0x0752	0x2E0D      	DECFSZ      R13, 1, 0
0x0754	0xD7FE      	BRA         L_main75
0x0756	0x2E0C      	DECFSZ      R12, 1, 0
0x0758	0xD7FC      	BRA         L_main75
;FastWaiter.c,380 :: 		}
L_main54:
;FastWaiter.c,381 :: 		}//while
0x075A	0xD777      	BRA         L_main51
;FastWaiter.c,382 :: 		}
L_end_main:
0x075C	0xD7FF      	BRA         $+0
; end of _main
0x0814	0xF016EE10  	LFSR        1, 22
0x0818	0x0EB5      	MOVLW       181
0x081A	0x6E00      	MOVWF       R0 
0x081C	0x0E01      	MOVLW       1
0x081E	0x6E01      	MOVWF       R1 
0x0820	0x0E5E      	MOVLW       94
0x0822	0x6EF6      	MOVWF       4086 
0x0824	0x0E07      	MOVLW       7
0x0826	0x6EF7      	MOVWF       TBLPTRH 
0x0828	0x0E00      	MOVLW       0
0x082A	0x6EF8      	MOVWF       TBLPTRU 
0x082C	0xF002EC26  	CALL        1100, 0
0x0830	0x0012      	RETURN      0
;FastWaiter.c,0 :: ?ICS?lstr2_FastWaiter
0x075E	0x6F44 ;?ICS?lstr2_FastWaiter+0
0x0760	0x5020 ;?ICS?lstr2_FastWaiter+2
0x0762	0x6465 ;?ICS?lstr2_FastWaiter+4
0x0764	0x6469 ;?ICS?lstr2_FastWaiter+6
0x0766	0x3A6F ;?ICS?lstr2_FastWaiter+8
0x0768	0x00 ;?ICS?lstr2_FastWaiter+10
; end of ?ICS?lstr2_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr1_FastWaiter
0x0769	0x6944 ;?ICS?lstr1_FastWaiter+0
0x076B	0x6967 ;?ICS?lstr1_FastWaiter+2
0x076D	0x6574 ;?ICS?lstr1_FastWaiter+4
0x076F	0x6F20 ;?ICS?lstr1_FastWaiter+6
0x0771	0x4E20 ;?ICS?lstr1_FastWaiter+8
0x0773	0x6D75 ;?ICS?lstr1_FastWaiter+10
0x0775	0x7265 ;?ICS?lstr1_FastWaiter+12
0x0777	0x006F ;?ICS?lstr1_FastWaiter+14
; end of ?ICS?lstr1_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr4_FastWaiter
0x0779	0x7571 ;?ICS?lstr4_FastWaiter+0
0x077B	0x6E61 ;?ICS?lstr4_FastWaiter+2
0x077D	0x6974 ;?ICS?lstr4_FastWaiter+4
0x077F	0x6164 ;?ICS?lstr4_FastWaiter+6
0x0781	0x6564 ;?ICS?lstr4_FastWaiter+8
0x0783	0x003A ;?ICS?lstr4_FastWaiter+10
; end of ?ICS?lstr4_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr8_FastWaiter
0x0785	0x2020 ;?ICS?lstr8_FastWaiter+0
0x0787	0x2020 ;?ICS?lstr8_FastWaiter+2
0x0789	0x6E45 ;?ICS?lstr8_FastWaiter+4
0x078B	0x6976 ;?ICS?lstr8_FastWaiter+6
0x078D	0x6461 ;?ICS?lstr8_FastWaiter+8
0x078F	0x2061 ;?ICS?lstr8_FastWaiter+10
0x0791	0x2020 ;?ICS?lstr8_FastWaiter+12
0x0793	0x2020 ;?ICS?lstr8_FastWaiter+14
0x0795	0x00 ;?ICS?lstr8_FastWaiter+16
; end of ?ICS?lstr8_FastWaiter
;FastWaiter.c,0 :: ?ICS_oldstate
0x0796	0x00 ;?ICS_oldstate+0
; end of ?ICS_oldstate
;FastWaiter.c,0 :: ?ICS?lstr3_FastWaiter
0x0797	0x6944 ;?ICS?lstr3_FastWaiter+0
0x0799	0x6967 ;?ICS?lstr3_FastWaiter+2
0x079B	0x6574 ;?ICS?lstr3_FastWaiter+4
0x079D	0x6120 ;?ICS?lstr3_FastWaiter+6
0x079F	0x00 ;?ICS?lstr3_FastWaiter+8
; end of ?ICS?lstr3_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr17_FastWaiter
0x07A0	0x2020 ;?ICS?lstr17_FastWaiter+0
0x07A2	0x2020 ;?ICS?lstr17_FastWaiter+2
0x07A4	0x6E65 ;?ICS?lstr17_FastWaiter+4
0x07A6	0x6976 ;?ICS?lstr17_FastWaiter+6
0x07A8	0x6461 ;?ICS?lstr17_FastWaiter+8
0x07AA	0x206F ;?ICS?lstr17_FastWaiter+10
0x07AC	0x2020 ;?ICS?lstr17_FastWaiter+12
0x07AE	0x00 ;?ICS?lstr17_FastWaiter+14
; end of ?ICS?lstr17_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr16_FastWaiter
0x07AF	0x2020 ;?ICS?lstr16_FastWaiter+0
0x07B1	0x2020 ;?ICS?lstr16_FastWaiter+2
0x07B3	0x5020 ;?ICS?lstr16_FastWaiter+4
0x07B5	0x6465 ;?ICS?lstr16_FastWaiter+6
0x07B7	0x6469 ;?ICS?lstr16_FastWaiter+8
0x07B9	0x206F ;?ICS?lstr16_FastWaiter+10
0x07BB	0x2020 ;?ICS?lstr16_FastWaiter+12
0x07BD	0x2020 ;?ICS?lstr16_FastWaiter+14
0x07BF	0x00 ;?ICS?lstr16_FastWaiter+16
; end of ?ICS?lstr16_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr7_FastWaiter
0x07C0	0x2020 ;?ICS?lstr7_FastWaiter+0
0x07C2	0x2020 ;?ICS?lstr7_FastWaiter+2
0x07C4	0x4320 ;?ICS?lstr7_FastWaiter+4
0x07C6	0x6E6F ;?ICS?lstr7_FastWaiter+6
0x07C8	0x6174 ;?ICS?lstr7_FastWaiter+8
0x07CA	0x2020 ;?ICS?lstr7_FastWaiter+10
0x07CC	0x2020 ;?ICS?lstr7_FastWaiter+12
0x07CE	0x2020 ;?ICS?lstr7_FastWaiter+14
0x07D0	0x00 ;?ICS?lstr7_FastWaiter+16
; end of ?ICS?lstr7_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr6_FastWaiter
0x07D1	0x2020 ;?ICS?lstr6_FastWaiter+0
0x07D3	0x2020 ;?ICS?lstr6_FastWaiter+2
0x07D5	0x4720 ;?ICS?lstr6_FastWaiter+4
0x07D7	0x7261 ;?ICS?lstr6_FastWaiter+6
0x07D9	0x6F3F ;?ICS?lstr6_FastWaiter+8
0x07DB	0x206E ;?ICS?lstr6_FastWaiter+10
0x07DD	0x2020 ;?ICS?lstr6_FastWaiter+12
0x07DF	0x2020 ;?ICS?lstr6_FastWaiter+14
0x07E1	0x00 ;?ICS?lstr6_FastWaiter+16
; end of ?ICS?lstr6_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr5_FastWaiter
0x07E2	0x2020 ;?ICS?lstr5_FastWaiter+0
0x07E4	0x2020 ;?ICS?lstr5_FastWaiter+2
0x07E6	0x6843 ;?ICS?lstr5_FastWaiter+4
0x07E8	0x6D61 ;?ICS?lstr5_FastWaiter+6
0x07EA	0x6E61 ;?ICS?lstr5_FastWaiter+8
0x07EC	0x6F64 ;?ICS?lstr5_FastWaiter+10
0x07EE	0x2020 ;?ICS?lstr5_FastWaiter+12
0x07F0	0x2020 ;?ICS?lstr5_FastWaiter+14
0x07F2	0x00 ;?ICS?lstr5_FastWaiter+16
; end of ?ICS?lstr5_FastWaiter
;FastWaiter.c,0 :: ?ICS_pos
0x07F3	0x00 ;?ICS_pos+0
; end of ?ICS_pos
;FastWaiter.c,0 :: ?ICS?lstr13_FastWaiter
0x07F4	0x6550 ;?ICS?lstr13_FastWaiter+0
0x07F6	0x6964 ;?ICS?lstr13_FastWaiter+2
0x07F8	0x6F64 ;?ICS?lstr13_FastWaiter+4
0x07FA	0x003A ;?ICS?lstr13_FastWaiter+6
; end of ?ICS?lstr13_FastWaiter
;FastWaiter.c,0 :: ?ICS_i
0x07FC	0x00 ;?ICS_i+0
; end of ?ICS_i
;FastWaiter.c,0 :: ?ICS?lstr15_FastWaiter
0x07FD	0x7551 ;?ICS?lstr15_FastWaiter+0
0x07FF	0x6E61 ;?ICS?lstr15_FastWaiter+2
0x0801	0x6974 ;?ICS?lstr15_FastWaiter+4
0x0803	0x6164 ;?ICS?lstr15_FastWaiter+6
0x0805	0x6564 ;?ICS?lstr15_FastWaiter+8
0x0807	0x003A ;?ICS?lstr15_FastWaiter+10
; end of ?ICS?lstr15_FastWaiter
;FastWaiter.c,0 :: ?ICS?lstr14_FastWaiter
0x0809	0x2020 ;?ICS?lstr14_FastWaiter+0
0x080B	0x00 ;?ICS?lstr14_FastWaiter+2
; end of ?ICS?lstr14_FastWaiter
;FastWaiter.c,0 :: ?ICS_secs
0x080C	0x00 ;?ICS_secs+0
; end of ?ICS_secs
;FastWaiter.c,0 :: ?ICS_oneSecond
0x080D	0x0000 ;?ICS_oneSecond+0
; end of ?ICS_oneSecond
;FastWaiter.c,0 :: ?ICS_rxRead
0x080F	0x0000 ;?ICS_rxRead+0
; end of ?ICS_rxRead
;FastWaiter.c,0 :: ?ICS_count
0x0811	0x0000 ;?ICS_count+0
; end of ?ICS_count
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [110]    _interrupt
0x0076      [14]    _Delay_50us
0x0084      [22]    _Delay_5500us
0x009A      [14]    _Delay_1us
0x00A8     [126]    _Lcd_Cmd
0x0126      [14]    _Lcd_Chr_CP
0x0134     [126]    _Lcd_Out
0x01B2      [14]    _UART1_Write
0x01C0      [14]    _Delay_10us
0x01CE     [106]    _Keypad_Key_Press
0x0238      [40]    _pedido
0x0260     [228]    _teclaauxiliar
0x0344      [24]    _Keypad_Key_Click
0x035C     [152]    _Lcd_Init
0x03F4      [88]    _UART1_Init
0x044C      [16]    ___CC2DW
0x045C      [26]    _Keypad_Init
0x0476      [18]    _escrita
0x0488      [52]    _UART1_Write_Text
0x04BC     [222]    _leitura
0x059A      [40]    _quantidade
0x05C2     [412]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_USB_genHID_?FLOC____Lib_USB_genHID_USB_Handle_BusyT1
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    R2
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    R3
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0004       [1]    __Lib_USB_genHID_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0006       [2]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_totalLen_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [3]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_ptr_L0
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016      [11]    ?lstr2_FastWaiter
0x0021      [16]    ?lstr1_FastWaiter
0x0031      [12]    ?lstr4_FastWaiter
0x003D      [17]    ?lstr8_FastWaiter
0x004E       [1]    _oldstate
0x004F       [9]    ?lstr3_FastWaiter
0x0058      [15]    ?lstr17_FastWaiter
0x0067      [17]    ?lstr16_FastWaiter
0x0078      [17]    ?lstr7_FastWaiter
0x0089      [17]    ?lstr6_FastWaiter
0x009A      [17]    ?lstr5_FastWaiter
0x00AB       [1]    _pos
0x00AC       [8]    ?lstr13_FastWaiter
0x00B4       [1]    _i
0x00B5      [12]    ?lstr15_FastWaiter
0x00C1       [3]    ?lstr14_FastWaiter
0x00C4       [1]    _secs
0x00C5       [2]    _oneSecond
0x00C7       [2]    _rxRead
0x00C9       [2]    _count
0x00CB       [1]    _kp
0x00CC       [4]    _UART_Rd_Ptr
0x00D0       [4]    _UART_Rdy_Ptr
0x00D4       [4]    _UART_Tx_Idle_Ptr
0x00D8       [0]    __Lib_Lcd_cmd_status
0x00D9       [4]    _UART_Wr_Ptr
0x00DD       [1]    _qtd
0x00DE       [1]    _num
0x00DF       [2]    FARG_UART1_Write_Text_uart_text
0x00E1       [1]    UART1_Write_Text_data__L0
0x00E2       [1]    UART1_Write_Text_counter_L0
0x00E3       [1]    Keypad_Key_Click_rslt_L0
0x00E4       [1]    Keypad_Key_Press_rslt_L0
0x00E4       [1]    FARG_UART1_Write_data_
0x00E5       [1]    Keypad_Key_Press_kdata_L0
0x00E6       [1]    Keypad_Key_Press_loc_L0
0x00E7       [1]    Keypad_Key_Press_rowcnt_L0
0x00E8       [1]    Keypad_Key_Press_shifter_L0
0x00E9       [1]    FARG_Lcd_Out_row
0x00EA       [1]    FARG_Lcd_Out_column
0x00EB       [2]    FARG_Lcd_Out_text
0x00ED       [1]    Lcd_Out_i_L0
0x00EE       [1]    FARG_Lcd_Chr_CP_out_char
0x00EF       [1]    FARG_Lcd_Cmd_out_char
0x0F81       [0]    RB4_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB3_bit
0x0F81       [0]    LCD_RS
0x0F81       [0]    LCD_D7
0x0F81       [0]    RB5_bit
0x0F81       [0]    LCD_D6
0x0F81       [0]    RB6_bit
0x0F81       [0]    LCD_D4
0x0F81       [0]    LCD_D5
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    LCD_EN
0x0F83       [1]    PORTD
0x0F83       [1]    keypadPort
0x0F84       [1]    PORTE
0x0F93       [1]    TRISB
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F96       [1]    TRISE
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    RCIF_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    FERR_bit
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB4       [1]    CMCON
0x0FB8       [1]    BAUDCON
0x0FC1       [1]    ADCON1
0x0FD0       [1]    RCON
0x0FD3       [1]    OSCCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [0]    PEIE_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x075E      [11]    ?ICS?lstr2_FastWaiter
0x0769      [16]    ?ICS?lstr1_FastWaiter
0x0779      [12]    ?ICS?lstr4_FastWaiter
0x0785      [17]    ?ICS?lstr8_FastWaiter
0x0796       [1]    ?ICS_oldstate
0x0797       [9]    ?ICS?lstr3_FastWaiter
0x07A0      [15]    ?ICS?lstr17_FastWaiter
0x07AF      [17]    ?ICS?lstr16_FastWaiter
0x07C0      [17]    ?ICS?lstr7_FastWaiter
0x07D1      [17]    ?ICS?lstr6_FastWaiter
0x07E2      [17]    ?ICS?lstr5_FastWaiter
0x07F3       [1]    ?ICS_pos
0x07F4       [8]    ?ICS?lstr13_FastWaiter
0x07FC       [1]    ?ICS_i
0x07FD      [12]    ?ICS?lstr15_FastWaiter
0x0809       [3]    ?ICS?lstr14_FastWaiter
0x080C       [1]    ?ICS_secs
0x080D       [2]    ?ICS_oneSecond
0x080F       [2]    ?ICS_rxRead
0x0811       [2]    ?ICS_count
